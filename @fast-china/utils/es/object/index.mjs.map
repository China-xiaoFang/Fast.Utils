{"version":3,"file":"index.mjs","sources":["../../../../src/object/index.ts"],"sourcesContent":["/**\n * 对象工具类\n */\nexport const objectUtil = {\n\t/**\n\t * 对象URL参数化\n\t */\n\tobjectToQueryString(obj: any): string {\n\t\tlet params = \"\";\n\t\tfor (const key in obj) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t\t\t\tif (params !== \"\") {\n\t\t\t\t\tparams += \"&\";\n\t\t\t\t}\n\t\t\t\tparams += `${encodeURIComponent(key)}=${encodeURIComponent(obj[key])}`;\n\t\t\t}\n\t\t}\n\t\treturn params;\n\t},\n\t/**\n\t * 是否存在重复值\n\t */\n\thasDuplicateProperty<T>(arr: T[], prop: keyof T): boolean {\n\t\tconst values = arr.map((obj) => obj[prop]);\n\t\tconst uniqueValues = new Set(values);\n\t\treturn values.length !== uniqueValues.size;\n\t},\n\t/**\n\t * 是否存在非重复值\n\t */\n\thasDifferentProperty<T>(arr: T[], prop: keyof T): boolean {\n\t\tconst valueSet = new Set<any>();\n\t\tfor (const obj of arr) {\n\t\t\tvalueSet.add(obj[prop]);\n\t\t\tif (valueSet.size > 1) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\t/**\n\t * 时间处理翻译\n\t */\n\tdateTimeFix(date: string | Date | null | undefined): string {\n\t\tif (date !== null && date !== undefined && date) {\n\t\t\tif (typeof date === \"string\") {\n\t\t\t\tdate = new Date(date);\n\t\t\t}\n\n\t\t\t// 获取时间戳\n\t\t\tlet timestamp = date.getTime();\n\t\t\tif (timestamp.toString().length < 13) {\n\t\t\t\tconst arrTimestamp = timestamp.toString().split(\"\");\n\t\t\t\tfor (let start = 0; start < 13; start++) {\n\t\t\t\t\tif (!arrTimestamp[start]) {\n\t\t\t\t\t\tarrTimestamp[start] = \"0\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttimestamp = parseInt(arrTimestamp.join(\"\"));\n\t\t\t}\n\t\t\tconst minute = 1000 * 60;\n\t\t\tconst hour = minute * 60;\n\t\t\tconst day = hour * 24;\n\t\t\tconst month = day * 30;\n\t\t\t// 获取当前时间\n\t\t\tconst curTime = new Date().getTime();\n\t\t\t// 比较\n\t\t\tconst diffValue = curTime - timestamp;\n\n\t\t\t// 计算差异时间的量级\n\t\t\tconst monthC = diffValue / month;\n\t\t\tconst weekC = diffValue / (7 * day);\n\t\t\tconst dayC = diffValue / day;\n\t\t\tconst hourC = diffValue / hour;\n\t\t\tconst minC = diffValue / minute;\n\n\t\t\t// 如果本地时间反而小于变量时间\n\t\t\tif (diffValue < 0) {\n\t\t\t\tconst monthC1 = Math.abs(monthC);\n\t\t\t\tconst weekC1 = Math.abs(weekC);\n\t\t\t\tconst dayC1 = Math.abs(dayC);\n\t\t\t\tconst hourC1 = Math.abs(hourC);\n\t\t\t\tconst minC1 = Math.abs(minC);\n\n\t\t\t\tif (monthC1 > 12) {\n\t\t\t\t\t// 超过1年，直接显示 几 年前\n\t\t\t\t\treturn `${parseInt(`${monthC1 / 12}`)}年后`;\n\t\t\t\t} else if (monthC1 >= 6) {\n\t\t\t\t\treturn \"半年后\";\n\t\t\t\t} else if (monthC1 >= 1) {\n\t\t\t\t\treturn `${parseInt(`${monthC1}`)}月后`;\n\t\t\t\t} else if (weekC1 > 2) {\n\t\t\t\t\treturn \"半月后\";\n\t\t\t\t} else if (weekC1 >= 1) {\n\t\t\t\t\treturn `${parseInt(`${weekC1}`)}周后`;\n\t\t\t\t} else if (dayC1 >= 1) {\n\t\t\t\t\treturn `${parseInt(`${dayC1}`)}天后`;\n\t\t\t\t} else if (hourC1 >= 1) {\n\t\t\t\t\treturn `${parseInt(`${hourC1}`)}小时后`;\n\t\t\t\t} else if (minC1 >= 1) {\n\t\t\t\t\treturn `${parseInt(`${minC1}`)}分钟后`;\n\t\t\t\t}\n\t\t\t\treturn \"刚刚\";\n\t\t\t\t// return \"不久前\";\n\t\t\t}\n\n\t\t\t// 使用\n\t\t\tif (monthC > 12) {\n\t\t\t\t// 超过1年，直接显示 几 年前\n\t\t\t\treturn `${parseInt(`${monthC / 12}`)}年前`;\n\t\t\t} else if (monthC >= 6) {\n\t\t\t\treturn \"半年前\";\n\t\t\t} else if (monthC >= 1) {\n\t\t\t\treturn `${parseInt(`${monthC}`)}月前`;\n\t\t\t} else if (weekC > 2) {\n\t\t\t\treturn \"半月前\";\n\t\t\t} else if (weekC >= 1) {\n\t\t\t\treturn `${parseInt(`${weekC}`)}周前`;\n\t\t\t} else if (dayC >= 1) {\n\t\t\t\treturn `${parseInt(`${dayC}`)}天前`;\n\t\t\t} else if (hourC >= 1) {\n\t\t\t\treturn `${parseInt(`${hourC}`)}小时前`;\n\t\t\t} else if (minC >= 1) {\n\t\t\t\treturn `${parseInt(`${minC}`)}分钟前`;\n\t\t\t}\n\t\t\treturn \"刚刚\";\n\t\t} else {\n\t\t\treturn \"\";\n\t\t}\n\t},\n};\n"],"names":[],"mappings":"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"}