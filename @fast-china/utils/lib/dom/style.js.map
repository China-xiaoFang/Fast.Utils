{"version":3,"file":"style.js","sources":["../../../../src/dom/style.ts"],"sourcesContent":["import { isNumber, isString } from \"lodash-unified\";\nimport { consoleWarn } from \"../console\";\n\nconst isStringNumber = (val: string): boolean => {\n\tif (!isString(val)) {\n\t\treturn false;\n\t}\n\treturn !Number.isNaN(Number(val));\n};\n\n/**\n * 添加单位\n * @param value 字符串或数字类型\n * @param defaultUnit 单位\n */\nexport const addUnit = (value?: string | number, defaultUnit = \"px\"): string => {\n\tif (!value) return \"\";\n\tif (isNumber(value) || isStringNumber(value)) {\n\t\treturn `${value}${defaultUnit}`;\n\t} else if (isString(value)) {\n\t\treturn value;\n\t}\n\tconsoleWarn(\"document\", \"binding value must be a string or number\");\n};\n\n/**\n * 将样式对象转换为内联 style 字符串（kebab-case 格式）\n * @param style 样式对象（CSSStyleDeclaration）\n * @returns 返回符合 HTML 内联格式的样式字符串，例如 \"font-size: 14px; color: red;\"\n */\nexport const styleToString = (style: CSSStyleDeclaration): string => {\n\tif (!style) return \"\";\n\treturn Object.entries(style)\n\t\t.map(([key, value]) => {\n\t\t\tconst keyName = key.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n\t\t\treturn `${keyName}: ${value};`;\n\t\t})\n\t\t.join(\" \");\n};\n"],"names":["value","defaultUnit","isNumber","val","isString","Number","isNaN","index","consoleWarn","style","Object","entries","map","key","replace","toLowerCase","join"],"mappings":"mKAeuB,CAACA,EAAyBC,EAAc,QAC1D,OAACD,EACDE,EAASA,SAAAF,KAdUG,EAceH,EAbjCI,EAAAA,SAASD,KAGNE,OAAOC,MAAMD,OAAOF,KAWpB,GAAGH,IAAQC,IACRG,EAAAA,SAASJ,GACZA,OAERO,EAAAC,YAAY,WAAY,4CANL,GAbG,IAACL,CAmB2C,wBAQrCM,GACxBA,EACEC,OAAOC,QAAQF,GACpBG,KAAI,EAAEC,EAAKb,KAEJ,GADSa,EAAIC,QAAQ,WAAY,OAAOC,kBACzBf,OAEtBgB,KAAK,KANY"}