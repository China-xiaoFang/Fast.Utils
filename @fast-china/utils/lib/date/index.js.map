{"version":3,"file":"index.js","sources":["../../../../src/date/index.ts"],"sourcesContent":["/**\n * Date工具类\n */\nexport const dateUtil = {\n\t/**\n\t * 根据当前时间生成问候语\n\t */\n\tgetGreet(): string {\n\t\tconst now = new Date();\n\t\tconst hour = now.getHours();\n\t\tlet greet = \"\";\n\n\t\tif (hour < 5) {\n\t\t\tgreet = \"夜深了，注意身体哦！\";\n\t\t} else if (hour < 9) {\n\t\t\tgreet = \"早上好！\" + \"欢迎回来！\";\n\t\t} else if (hour < 12) {\n\t\t\tgreet = \"上午好！\" + \"欢迎回来！\";\n\t\t} else if (hour < 14) {\n\t\t\tgreet = \"中午好！\" + \"欢迎回来！\";\n\t\t} else if (hour < 18) {\n\t\t\tgreet = \"下午好！\" + \"欢迎回来！\";\n\t\t} else if (hour < 24) {\n\t\t\tgreet = \"晚上好！\" + \"欢迎回来！\";\n\t\t} else {\n\t\t\tgreet = \"您好！\" + \"欢迎回来！\";\n\t\t}\n\t\treturn greet;\n\t},\n\t/**\n\t * 时间处理翻译\n\t */\n\tdateTimeFix(date: string | Date | null | undefined): string {\n\t\tif (date !== null && date !== undefined && date) {\n\t\t\tif (typeof date === \"string\") {\n\t\t\t\tdate = new Date(date);\n\t\t\t}\n\n\t\t\t// 获取时间戳\n\t\t\tlet timestamp = date.getTime();\n\t\t\tif (timestamp.toString().length < 13) {\n\t\t\t\tconst arrTimestamp = timestamp.toString().split(\"\");\n\t\t\t\tfor (let start = 0; start < 13; start++) {\n\t\t\t\t\tif (!arrTimestamp[start]) {\n\t\t\t\t\t\tarrTimestamp[start] = \"0\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttimestamp = parseInt(arrTimestamp.join(\"\"));\n\t\t\t}\n\t\t\tconst minute = 1000 * 60;\n\t\t\tconst hour = minute * 60;\n\t\t\tconst day = hour * 24;\n\t\t\tconst month = day * 30;\n\t\t\t// 获取当前时间\n\t\t\tconst curTime = new Date().getTime();\n\t\t\t// 比较\n\t\t\tconst diffValue = curTime - timestamp;\n\n\t\t\t// 计算差异时间的量级\n\t\t\tconst monthC = diffValue / month;\n\t\t\tconst weekC = diffValue / (7 * day);\n\t\t\tconst dayC = diffValue / day;\n\t\t\tconst hourC = diffValue / hour;\n\t\t\tconst minC = diffValue / minute;\n\n\t\t\t// 如果本地时间反而小于变量时间\n\t\t\tif (diffValue < 0) {\n\t\t\t\tconst monthC1 = Math.abs(monthC);\n\t\t\t\tconst weekC1 = Math.abs(weekC);\n\t\t\t\tconst dayC1 = Math.abs(dayC);\n\t\t\t\tconst hourC1 = Math.abs(hourC);\n\t\t\t\tconst minC1 = Math.abs(minC);\n\n\t\t\t\tif (monthC1 > 12) {\n\t\t\t\t\t// 超过1年，直接显示 几 年前\n\t\t\t\t\treturn `${parseInt(`${monthC1 / 12}`)}年后`;\n\t\t\t\t} else if (monthC1 >= 6) {\n\t\t\t\t\treturn \"半年后\";\n\t\t\t\t} else if (monthC1 >= 1) {\n\t\t\t\t\treturn `${parseInt(`${monthC1}`)}月后`;\n\t\t\t\t} else if (weekC1 > 2) {\n\t\t\t\t\treturn \"半月后\";\n\t\t\t\t} else if (weekC1 >= 1) {\n\t\t\t\t\treturn `${parseInt(`${weekC1}`)}周后`;\n\t\t\t\t} else if (dayC1 >= 1) {\n\t\t\t\t\treturn `${parseInt(`${dayC1}`)}天后`;\n\t\t\t\t} else if (hourC1 >= 1) {\n\t\t\t\t\treturn `${parseInt(`${hourC1}`)}小时后`;\n\t\t\t\t} else if (minC1 >= 1) {\n\t\t\t\t\treturn `${parseInt(`${minC1}`)}分钟后`;\n\t\t\t\t}\n\t\t\t\treturn \"刚刚\";\n\t\t\t\t// return \"不久前\";\n\t\t\t}\n\n\t\t\t// 使用\n\t\t\tif (monthC > 12) {\n\t\t\t\t// 超过1年，直接显示 几 年前\n\t\t\t\treturn `${parseInt(`${monthC / 12}`)}年前`;\n\t\t\t} else if (monthC >= 6) {\n\t\t\t\treturn \"半年前\";\n\t\t\t} else if (monthC >= 1) {\n\t\t\t\treturn `${parseInt(`${monthC}`)}月前`;\n\t\t\t} else if (weekC > 2) {\n\t\t\t\treturn \"半月前\";\n\t\t\t} else if (weekC >= 1) {\n\t\t\t\treturn `${parseInt(`${weekC}`)}周前`;\n\t\t\t} else if (dayC >= 1) {\n\t\t\t\treturn `${parseInt(`${dayC}`)}天前`;\n\t\t\t} else if (hourC >= 1) {\n\t\t\t\treturn `${parseInt(`${hourC}`)}小时前`;\n\t\t\t} else if (minC >= 1) {\n\t\t\t\treturn `${parseInt(`${minC}`)}分钟前`;\n\t\t\t}\n\t\t\treturn \"刚刚\";\n\t\t} else {\n\t\t\treturn \"\";\n\t\t}\n\t},\n\t/**\n\t * 获取默认时间\n\t * @returns [00:00:00, 23:59:59]\n\t */\n\tgetDefaultTime(): Date[] {\n\t\tconst end = new Date();\n\t\tconst start = new Date();\n\t\tstart.setMonth(start.getMonth() - 1);\n\t\tstart.setHours(0, 0, 0);\n\t\tend.setHours(23, 59, 59);\n\t\treturn [start, end];\n\t},\n\t/**\n\t * 获取简单的日期时间\n\t * @returns xxxx-xx-xx 00:00:00\n\t */\n\tgetSimpleTime(): Date {\n\t\tconst start = new Date();\n\t\tstart.setHours(0, 0, 0);\n\t\treturn start;\n\t},\n\t/**\n\t * 获取简单的日期时间范围\n\t */\n\tgetSimpleShortcuts(): {\n\t\ttext: string;\n\t\tvalue: () => Date;\n\t}[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\ttext: \"今天\",\n\t\t\t\tvalue: (): Date => {\n\t\t\t\t\tconst date = new Date();\n\t\t\t\t\tdate.setHours(0, 0, 0);\n\t\t\t\t\treturn date;\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: \"昨天\",\n\t\t\t\tvalue: (): Date => {\n\t\t\t\t\tconst date = new Date();\n\t\t\t\t\tdate.setDate(date.getDate() - 1);\n\t\t\t\t\tdate.setHours(0, 0, 0);\n\t\t\t\t\treturn date;\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: \"一周前\",\n\t\t\t\tvalue: (): Date => {\n\t\t\t\t\tconst date = new Date();\n\t\t\t\t\tdate.setDate(date.getDate() - 7);\n\t\t\t\t\tdate.setHours(0, 0, 0);\n\t\t\t\t\treturn date;\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: \"一月前\",\n\t\t\t\tvalue: (): Date => {\n\t\t\t\t\tconst date = new Date();\n\t\t\t\t\tdate.setMonth(date.getMonth() - 1);\n\t\t\t\t\tdate.setHours(0, 0, 0);\n\t\t\t\t\treturn date;\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: \"一年前\",\n\t\t\t\tvalue: (): Date => {\n\t\t\t\t\tconst date = new Date();\n\t\t\t\t\tdate.setFullYear(date.getFullYear() - 1);\n\t\t\t\t\tdate.setHours(0, 0, 0);\n\t\t\t\t\treturn date;\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t},\n\t/**\n\t * 获取日期范围\n\t */\n\tgetShortcuts(): {\n\t\ttext: string;\n\t\tvalue: () => Date[];\n\t}[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\ttext: \"近1天\",\n\t\t\t\tvalue: (): Date[] => {\n\t\t\t\t\tconst end = new Date();\n\t\t\t\t\tconst start = new Date();\n\t\t\t\t\tstart.setDate(start.getDate() - 1);\n\t\t\t\t\tstart.setHours(0, 0, 0);\n\t\t\t\t\tend.setHours(23, 59, 59);\n\t\t\t\t\treturn [start, end];\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: \"近3天\",\n\t\t\t\tvalue: (): Date[] => {\n\t\t\t\t\tconst end = new Date();\n\t\t\t\t\tconst start = new Date();\n\t\t\t\t\tstart.setDate(start.getDate() - 3);\n\t\t\t\t\tstart.setHours(0, 0, 0);\n\t\t\t\t\tend.setHours(23, 59, 59);\n\t\t\t\t\treturn [start, end];\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: \"近1周\",\n\t\t\t\tvalue: (): Date[] => {\n\t\t\t\t\tconst end = new Date();\n\t\t\t\t\tconst start = new Date();\n\t\t\t\t\tstart.setDate(start.getDate() - 7);\n\t\t\t\t\tstart.setHours(0, 0, 0);\n\t\t\t\t\tend.setHours(23, 59, 59);\n\t\t\t\t\treturn [start, end];\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: \"近1月\",\n\t\t\t\tvalue: (): Date[] => {\n\t\t\t\t\tconst end = new Date();\n\t\t\t\t\tconst start = new Date();\n\t\t\t\t\tstart.setMonth(start.getMonth() - 1);\n\t\t\t\t\tstart.setHours(0, 0, 0);\n\t\t\t\t\tend.setHours(23, 59, 59);\n\t\t\t\t\treturn [start, end];\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: \"近3月\",\n\t\t\t\tvalue: (): Date[] => {\n\t\t\t\t\tconst end = new Date();\n\t\t\t\t\tconst start = new Date();\n\t\t\t\t\tstart.setMonth(start.getMonth() - 3);\n\t\t\t\t\tstart.setHours(0, 0, 0);\n\t\t\t\t\tend.setHours(23, 59, 59);\n\t\t\t\t\treturn [start, end];\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: \"近6月\",\n\t\t\t\tvalue: (): Date[] => {\n\t\t\t\t\tconst end = new Date();\n\t\t\t\t\tconst start = new Date();\n\t\t\t\t\tstart.setMonth(start.getMonth() - 6);\n\t\t\t\t\tstart.setHours(0, 0, 0);\n\t\t\t\t\tend.setHours(23, 59, 59);\n\t\t\t\t\treturn [start, end];\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: \"近1年\",\n\t\t\t\tvalue: (): Date[] => {\n\t\t\t\t\tconst end = new Date();\n\t\t\t\t\tconst start = new Date();\n\t\t\t\t\tstart.setFullYear(start.getFullYear() - 1);\n\t\t\t\t\tstart.setHours(0, 0, 0);\n\t\t\t\t\tend.setHours(23, 59, 59);\n\t\t\t\t\treturn [start, end];\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t},\n\t/**\n\t * 判断传入的时间是否大于当前时间\n\t */\n\tgetDisabledDate(time: Date): boolean {\n\t\treturn time.getTime() > Date.now();\n\t},\n};\n"],"names":["dateUtil","getGreet","hour","Date","getHours","greet","dateTimeFix","date","timestamp","getTime","toString","length","arrTimestamp","split","start","parseInt","join","minute","day","month","diffValue","monthC","weekC","dayC","hourC","minC","monthC1","Math","abs","weekC1","dayC1","hourC1","minC1","getDefaultTime","end","setMonth","getMonth","setHours","getSimpleTime","getSimpleShortcuts","text","value","setDate","getDate","setFullYear","getFullYear","getShortcuts","getDisabledDate","time","now"],"mappings":"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"}