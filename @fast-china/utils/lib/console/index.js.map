{"version":3,"file":"index.js","sources":["../../../../src/console/index.ts"],"sourcesContent":["import { reactive } from \"vue\";\nimport { isNil, isString } from \"lodash-unified\";\nimport { FastError } from \"../error\";\n\nconst state = reactive({\n\t/** @description Uni-App 在 APP-PLUS 下是否拆分输出 @default false */\n\tuniAppPlusSplit: false,\n});\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type, @typescript-eslint/explicit-module-boundary-types\nexport const useConsole = () => {\n\treturn {\n\t\t/**\n\t\t * 设置 Uni-App 在 APP-PLUS 下是否拆分输出\n\t\t */\n\t\tsetUniAppPlusSplit(value: boolean): void {\n\t\t\tstate.uniAppPlusSplit = value;\n\t\t},\n\t};\n};\n\ntype LogLevel = \"Log\" | \"Warn\" | \"Debug\" | \"Error\";\n\nconst vConsole = (level: LogLevel, ...args: any[]): void => {\n\tif (state.uniAppPlusSplit) {\n\t\tif (typeof uni !== \"undefined\") {\n\t\t\tif (typeof plus !== \"undefined\") {\n\t\t\t\t// 循环 arg 参数，每个参数单独输出\n\t\t\t\targs.forEach((item) => {\n\t\t\t\t\tif (isNil(item)) return;\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole[level.toLowerCase()](isString(item) ? item : JSON.stringify(item, null, 2));\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\t// eslint-disable-next-line no-console\n\tconsole[level.toLowerCase()](...args);\n};\n\nconst makeConsole = (level: LogLevel) => {\n\treturn (name: string, message?: string | false, error?: any): void => {\n\t\tconst prefix = `[Fast-${level}-${name}]`;\n\t\tif (error) {\n\t\t\tvConsole(level, `${prefix}${message ?? \"\"}`, error);\n\t\t} else {\n\t\t\tvConsole(level, `${prefix}${message ?? \"\"}`);\n\t\t}\n\t};\n};\n\n/**\n * 打印 Log 日志\n * @param name 来源名称\n */\nexport const consoleLog = makeConsole(\"Log\");\n\n/**\n * 打印 Warn 日志\n * @param name 来源名称\n */\nexport const consoleWarn = makeConsole(\"Warn\");\n\n/**\n * 打印 Debug 日志\n * @param name 来源名称\n */\nexport const consoleDebug = makeConsole(\"Debug\");\n\n/**\n * 打印 Error 日志\n * @param name 来源名称\n */\nexport const consoleError = (name: string, message?: any): void => {\n\tif (isNil(message)) {\n\t\treturn;\n\t}\n\tif (isString(message)) {\n\t\tconsole.error(new FastError(`[Fast-${name}] ${message}`));\n\t} else {\n\t\tvConsole(\"Error\", `[Fast-Error-${name}]`, message);\n\t}\n};\n\n/**\n * 抛出错误\n * @param name 来源名称\n */\nexport const throwError = (name: string, message?: any): never => {\n\tthrow new FastError(`[Fast-${name}] ${message}`);\n};\n"],"names":["state","reactive","uniAppPlusSplit","vConsole","level","args","uni","plus","forEach","item","isNil","console","toLowerCase","isString","JSON","stringify","makeConsole","name","message","error","prefix","consoleLog","consoleWarn","consoleDebug","FastError","setUniAppPlusSplit","value"],"mappings":"kKAIMA,EAAQC,EAAAA,SAAS,CAEtBC,iBAAiB,IAiBZC,EAAW,CAACC,KAAoBC,KACjCL,EAAME,iBACU,oBAARI,KACU,oBAATC,KAELF,EAAAG,SAASC,IACTC,EAAAA,MAAMD,IAEVE,QAAQP,EAAMQ,eAAeC,EAASA,SAAAJ,GAAQA,EAAOK,KAAKC,UAAUN,EAAM,KAAM,GAAE,IAOtFE,QAAQP,EAAMQ,kBAAkBP,EAAI,EAG/BW,EAAeZ,GACb,CAACa,EAAcC,EAA0BC,KAC/C,MAAMC,EAAS,SAAShB,KAASa,KAC7BE,EACHhB,EAASC,EAAO,GAAGgB,IAASF,GAAW,KAAMC,GAE7ChB,EAASC,EAAO,GAAGgB,IAASF,GAAW,KAAI,EASjCG,EAAaL,EAAY,OAMzBM,EAAcN,EAAY,QAM1BO,EAAeP,EAAY,qDAMZ,CAACC,EAAcC,KACtCR,EAAAA,MAAMQ,KAGNL,EAAAA,SAASK,GACJP,QAAAQ,MAAM,IAAIK,EAAAA,UAAU,SAASP,MAASC,MAE9Cf,EAAS,QAAS,eAAec,KAASC,GAAO,gEAQzB,CAACD,EAAcC,KACxC,MAAM,IAAIM,EAAUA,UAAA,SAASP,MAASC,IAAS,qBAhFtB,KAClB,CAIN,kBAAAO,CAAmBC,GAClB1B,EAAME,gBAAkBwB,CAAA"}